version: '3.8'

# Outline Docker Compose Setup
#
# This file orchestrates the deployment of Outline, a professional knowledge base.
#
services:
  # --- Outline Knowledge Base Services ---
  # These services are required to run the Outline wiki.
  outline:
    image: docker.getoutline.com/outlinewiki/outline:latest
    ports:
      - '9000:3000' # Expose Outline on host port 9000
    env_file: ./outline.env
    volumes:
      - outline-storage-data:/var/lib/outline/data
    depends_on:
      - outline-postgres
      - outline-redis
    restart: unless-stopped

  outline-redis:
    image: redis:7-alpine
    env_file: ./outline.env
    expose:
      - "6379"
    volumes:
      - ./redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    restart: unless-stopped

  outline-postgres:
    image: postgres:15-alpine
    volumes:
      - outline-database-data:/var/lib/postgresql/data
    env_file: ./outline.env
    expose:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "outline", "-U", "user"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'pass'
      POSTGRES_DB: 'outline'
    restart: unless-stopped

  https-portal:
    image: steveltn/https-portal
    env_file: ./outline.env
    ports:
      - '80:80'
      - '443:443'
    links:
      - outline
    restart: always
    volumes:
      - https-portal-data:/var/lib/https-portal
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      DOMAINS: 'http://localhost:9000->http://outline.cpolar.io'
      STAGE: 'production'
      WEBSOCKET: 'true'
      CLIENT_MAX_BODY_SIZE: '0'

volumes:
  # Named volumes for Outline data persistence.
  https-portal-data:
  outline-storage-data:
  outline-database-data: